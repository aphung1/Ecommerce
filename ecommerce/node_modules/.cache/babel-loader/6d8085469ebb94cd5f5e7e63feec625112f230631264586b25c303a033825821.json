{"ast":null,"code":"var _jsxFileName = \"/Users/annaphung/Documents/Ecommerce/ecommerce/src/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport \"./SignUp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setEmailError(\"\");\n    setPasswordError(\"\");\n    try {\n      const res = await fetch(\"/auth/signup\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        headers: {\n          \"Content-Type\": \"application/json \"\n        }\n      });\n      const data = await res.json();\n      if (data.error) {\n        setEmailError(data.error.email);\n        setPasswordError(data.error.password);\n      }\n      if (data.id) {\n        Navigate(\"/\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignUp\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"SignUp__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email Address: \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), emailError && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"SignUp__form__error\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password: \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"SignUp__form__error\",\n          children: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), \"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"HjEjuT3SgFac1rgu6ozmW2Zs8Us=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Link","Navigate","SignUp","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","handleSubmit","e","preventDefault","res","fetch","method","body","JSON","stringify","headers","data","json","error","id","err","console","log","target","value"],"sources":["/Users/annaphung/Documents/Ecommerce/ecommerce/src/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, Navigate } from \"react-router-dom\";\n\nimport \"./SignUp.css\";\n\nconst SignUp = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setEmailError(\"\");\n    setPasswordError(\"\");\n    try {\n      const res = await fetch(\"/auth/signup\", {\n        method: \"POST\",\n        body: JSON.stringify({ email, password }),\n        headers: { \"Content-Type\": \"application/json \" },\n      });\n      const data = await res.json();\n      if (data.error) {\n        setEmailError(data.error.email);\n        setPasswordError(data.error.password);\n      }\n      if (data.id) {\n        Navigate(\"/\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"SignUp\">\n      <form className=\"SignUp__form\" onSubmit={handleSubmit}>\n        <h2>Sign Up</h2>\n        <label>\n          Email Address: &nbsp;\n          <input\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        {emailError && (\n          <React.Fragment>\n            <p className=\"SignUp__form__error\">{emailError}</p>\n            <br />\n          </React.Fragment>\n        )}\n        <label>\n          Password: &nbsp;\n          <input\n            type=\"password\"\n            required\n            name=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </label>\n        <br />\n        {passwordError && (\n          <React.Fragment>\n            <p className=\"SignUp__form__error\">{passwordError}</p>\n            <br />\n          </React.Fragment>\n        )}\n        <input type=\"submit\" value=\"Create an Account\" />\n        <br />\n        Already have an account? <Link to=\"/login\">Log In</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}